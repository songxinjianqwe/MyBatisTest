<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.newsong.dao.DepartmentDOMapper">
    <resultMap id="BaseResultMap" type="me.newsong.domain.entity.DepartmentDO">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="dept_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="dept_status" jdbcType="INTEGER" javaType="me.newsong.enums.DeptStatus"/>
        </constructor>
    </resultMap>
    
    <resultMap id="Join_Employee_ResultMap" type="me.newsong.domain.entity.DepartmentDO">
        <id column="id" property="id"></id>
        <result column="dept_name" property="deptName"></result>
        <!--select 属性是全类名+方法名-->
        <!--column 属性是传入到第二次查询的参数在第一次SQL中的属性名-->
        <!--查询得到的Department对象会自动set到第一次查询得到的对象中-->
        <collection property="emps" column="id" select="me.newsong.dao.EmployeeDOMapper.findByDept"></collection>
    </resultMap>

    <sql id="Base_Column_List">
        id, dept_name,dept_status
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from dept
        where id = #{id,jdbcType=INTEGER}
    </select>
    
    <select id="findDeptByIdWithEmps" resultMap="Join_Employee_ResultMap">
        select 
        <include refid="Base_Column_List"/>
        from dept 
        where id = #{id}
    </select>
    
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from dept
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="me.newsong.domain.entity.DepartmentDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into dept (id, dept_name,dept_status)
        values (#{id,jdbcType=INTEGER}, #{deptName,jdbcType=VARCHAR},#{deptStatus})
    </insert>
    <insert id="insertSelective" parameterType="me.newsong.domain.entity.DepartmentDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into dept
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="deptName != null">
                dept_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="deptName != null">
                #{deptName,jdbcType=VARCHAR},
            </if>
            <if test="deptStatus != null">
                #{deptStatus},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="me.newsong.domain.entity.DepartmentDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update dept
        <set>
            <if test="deptName != null">
                dept_name = #{deptName,jdbcType=VARCHAR},
            </if>
            <if test="deptStatus != null">
               dept_status= #{deptStatus},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="me.newsong.domain.entity.DepartmentDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update dept
        set dept_name = #{deptName,jdbcType=VARCHAR},dept_status={#deptStatus}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>