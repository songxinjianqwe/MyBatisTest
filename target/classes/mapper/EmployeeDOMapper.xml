<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.newsong.dao.EmployeeDOMapper">

    <resultMap id="BaseResultMap" type="me.newsong.domain.entity.EmployeeDO">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="last_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="gender" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    
    <!--MyBatis将会从结果集中取出每条记录，然后比较它的case的值。
    如果匹配任何discriminator中的case，它将使用由case指定的resultMap。
    这是排它性的，换句话说，其它的case的resultMap将会被忽略（除非使用extended）。
    如果没有匹配到任何case，MyBatis只是简单的使用定义在discriminator块外面的resultMap。-->
    <resultMap id="ResultMap_With_Discriminator" type="me.newsong.domain.entity.EmployeeDO">
        <id column="id" property="id"></id>
        <result column="last_name" property="lastName"></result>
        <result column="gender" property="gender"></result>
        <result column="email" property="email"></result>
        <discriminator javaType="string" column="gender">
            <case value="F" resultMap="FeMale_EmployeeMap"></case>
            <case value="M" resultMap="Male_EmployeeMap"></case>
        </discriminator>
    </resultMap>

    <!--在BaseResultMap基础上添加了dept-->
    <resultMap id="FeMale_EmployeeMap" type="me.newsong.domain.entity.EmployeeDO" extends="BaseResultMap">
        <association property="dept" column="dept" select="me.newsong.dao.DepartmentDOMapper.selectByPrimaryKey">
        </association>
    </resultMap>

    <!--去掉了email属性-->
    <resultMap id="Male_EmployeeMap" type="me.newsong.domain.entity.EmployeeDO">
        <id column="id" property="id"></id>
        <result column="last_name" property="lastName"></result>
        <result column="gender" property="gender"></result>
        <result column="email" property="gender"></result>
    </resultMap>
    
    <!-- 分步查询出Employee和与之关联的Department -->
    <resultMap id="Join_Dept_Result_Map" type="me.newsong.domain.entity.EmployeeDO">
        <id column="id" property="id"></id>
        <result column="last_name" property="lastName"></result>
        <result column="gender" property="gender"></result>
        <result column="email" property="email"></result>
        <!--第二次查询-->
        <!--select 属性是全类名+方法名-->
        <!--column 属性是传入到第二次查询的参数在第一次SQL中的属性名-->
        <!--查询得到的Department对象会自动set到第一次查询得到的对象中-->
        <association property="dept" column="dept" select="me.newsong.dao.DepartmentDOMapper.selectByPrimaryKey">
        </association>
    </resultMap>


    <sql id="Base_Column_List">
        id, last_name, gender, email
    </sql>

    <sql id="Join_Dept_Column_List">
        id, last_name, gender, email,dept
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from emp
        where id = #{id}
    </select>

    <!-- 分步查询出Employee和与之关联的Department -->
    <select id="findCascadeById" parameterType="java.lang.Integer" resultMap="Join_Dept_Result_Map">
        select
        <include refid="Join_Dept_Column_List"/>
        from emp
        where id = #{id}
    </select>
    
    <!--Discriminator测试-->
    <select id="findDiscriminatorById" parameterType="java.lang.Integer" resultMap="ResultMap_With_Discriminator">
        select
        <include refid="Join_Dept_Column_List"/>
        from emp
        where id = #{id}
    </select>

    <select id="findByDept" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from emp
        where dept = #{dept}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from emp
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="me.newsong.domain.entity.EmployeeDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into emp (id, last_name, gender,
        email)
        values (#{id,jdbcType=INTEGER}, #{lastName,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR},
        #{email,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="me.newsong.domain.entity.EmployeeDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into emp
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="lastName != null">
                last_name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="email != null">
                email,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="lastName != null">
                #{lastName,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="me.newsong.domain.entity.EmployeeDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update emp
        <set>
            <if test="lastName != null">
                last_name = #{lastName,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="me.newsong.domain.entity.EmployeeDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update emp
        set last_name = #{lastName,jdbcType=VARCHAR},
        gender = #{gender,jdbcType=CHAR},
        email = #{email,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="findAllEmployees" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from emp
    </select>

    <select id="getCount" resultType="int">
        select count(*) from emp
    </select>
</mapper>